---
title: "1_data_preparation"
format: html
editor: source
---

```{r setup, include=FALSE, warning=FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
source(here::here("R/functions.R"))
source(here::here("R/libraries.R"))
```

Create summarized experiment of raw data
```{r, include=FALSE}
#Load in data
df <- read_excel(here::here('data-raw/data.xlsx')) %>% 
    tibble::column_to_rownames("sample") %>% 
    t() %>% 
    as.data.frame() %>% 
    dplyr::rename_with(snakecase::to_snake_case) %>% 
    dplyr::mutate_all(as.numeric) %>% 
    dplyr::mutate_all(log2)

#Load in metadata
metadata <- read_excel(here::here('data-raw/design_raw.xlsx')) %>% 
    tibble::column_to_rownames("sample")

#Remove pool samples from dataframe
df <- df %>% 
    dplyr::select(-all_of(rownames(metadata[metadata$id == "pool",])))

#Remove pool samples from metadata
metadata <- metadata %>% 
    dplyr::filter(id != "pool") %>% 
    dplyr::mutate_at(c("id", "time", "site"), factor)

#Create summarized experiment
se <- PhosphoExperiment(assay = list(abundance = df), colData=metadata)

#Save data
usethis::use_data(se, overwrite = TRUE)

usethis::use_data(metadata, overwrite = TRUE)

```


```{r}
df_medianscaled <- PhosR::medianScaling(df)

boxplot(df, main = "Not normalized")
boxplot(df_medianscaled, main = "Medianscaled")
```

Check data
```{r}
color = metadata$id

plot1 <- plotQC(SummarizedExperiment::assay(se), 
                labels=colnames(SummarizedExperiment::assay(se)), 
                panel = "dendrogram", grps = color)+
                ggplot2::ggtitle("No scaling")

plot2 <- plotQC(SummarizedExperiment::assay(se),
                labels=colnames(SummarizedExperiment::assay(se)), 
                panel = "pca", grps = color)+
                ggplot2::ggtitle("No scaling")

ggpubr::ggarrange(plot1, plot2, nrow = 2)

```

Check sample correlations
```{r}
correlation_matrix <- cor(SummarizedExperiment::assay(se), method = "pearson")

annotation_colors = list(
  id = setNames(c("#003f5c", "#58508d", "#bc5090", "#ff6361", "#ff6e54", "#ffa600"), levels(metadata$id)),
  site = c(a = "#b9322c", v = "#295471"),
  time = c(pre = "white", baseline = "#515c51", exercise = "#007776", rec60 = "#0089cc", rec180 = "#7f7dff")
  )
 
# Create the heatmap with a title and set the title font size to 8
correlation_heatmap <- pheatmap(
  correlation_matrix,
  treeheight_row = 10,
  treeheight_col = 10,
  cluster_rows = T,
  cluster_cols = T,
  show_rownames = T,
  show_colnames = T,
  legend = T,
  fontsize = 6,
  color = colorRampPalette(c("white", "red"))(100),
  clustering_distance_cols="euclidean",
  clustering_distance_rows="euclidean",
  clustering_method = "ward.D2",
  annotation_col = dplyr::select(metadata, c("site", "id", "time")),
  annotation_row = dplyr::select(metadata, c("site", "id", "time")),
  annotation_colors= annotation_colors
  )

```

Create long form data set for plotting
```{r}
#Convert to long format
df_long <- SummarizedExperiment::assay(se) %>% 
    rownames_to_column(var="metabolite") %>% 
    melt(id.var="metabolite") %>% 
    dplyr::rename(sample = variable,
           abundance = value) %>% 
    merge((metadata %>% rownames_to_column("sample")), by="sample") %>%
    dplyr::relocate(metabolite, 1) %>% 
    dplyr::relocate(abundance, .after=id)

#Save data
usethis::use_data(df_long, overwrite = TRUE)
```

Summarize df_long for plotting
```{r}
df_long_summary <- df_long %>%
    group_by(metabolite, time) %>% 
    summarise(mean = mean(abundance),
              median = median(abundance)
              ) %>% 
    dplyr::ungroup()

#Save data
usethis::use_data(df_long_summary, overwrite = TRUE)
```

Create long form av_difference dataset for plotting
```{r}
df_long_av_difference <- df_long %>% 
    dplyr::group_by(metabolite, id, time) %>% 
    dplyr::mutate(av_difference = abundance[site == "a"] - abundance[site == "v"]) %>% 
    dplyr::filter(site == "a") %>% 
    dplyr::select(-c("abundance", "site"))%>% 
    dplyr::ungroup()

#Save data
usethis::use_data(df_long_av_difference, overwrite = TRUE)
```

Summarize df_long_av_difference
```{r}
df_long_av_difference_summary <- df_long_av_difference %>%
    group_by(metabolite, time) %>% 
    summarise(mean = mean(av_difference),
              median = median(av_difference)
              )%>% 
    dplyr::ungroup()

#Save data
usethis::use_data(df_long_av_difference_summary, overwrite = TRUE)
```
